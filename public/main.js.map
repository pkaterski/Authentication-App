{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', redirectTo: '' },\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n \nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate() {\r\n        if (this.authService.loggedIn()) return true;\r\n        else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center my-3\\\">\\n  <h1 class=\\\"display-4\\\">Wellcome to the Auth App!</h1>\\n  <p class=\\\"lead\\\">This is a simple app build on the MEAN stack by pesho. The app has basic functionalisanasdsad s d as dsanbdsasda dsa sda f  sdf sgfd sd fsd fds f ds fsd dfs Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vel sint veritatis officia numquam animi, voluptatibus molestiae, voluptates adipisci saepe vero eos? Ipsa voluptatem ab, ea velit non modi nam reiciendis.</p>\\n  <hr class=\\\"my-4\\\">\\n  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores, dignissimos?</p>\\n  <div>\\n    <a class=\\\"btn btn-primary btn-lg mx-1\\\" href=\\\"#\\\" role=\\\"button\\\" routerLink='register'>Register</a>\\n    <a class=\\\"btn btn-secondary btn-lg mx-1\\\" href=\\\"#\\\" role=\\\"button\\\" routerLink='login'>Log in</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>It simple</h3>\\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>It nice</h3>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing.</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>It good</h3>\\n    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Odit rerum quisquam rem?</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"my-3\\\">Log in</h3>\\n<div class=\\\"card my-3\\\" *ngIf=\\\"showMsg\\\" [ngClass]=\\\"msgClass\\\">\\n  <div class=\\\"card-body text-light\\\"> {{ msg }} </div>\\n</div>\\n<form (ngSubmit)=\\\"onLogin()\\\" #f=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" ngModel required #username=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !username.valid && username.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please enetr your username.\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !password.valid && password.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please enetr your password.\\n    </div>\\n  </div>\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\">\\n</form>\\n<br>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('f') loginForm: NgForm;\n  showMsg: Boolean = false;\n  msgClass: string = 'bg-warning';\n  msg: string;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    const user = {\n      username: this.loginForm.value.username,\n      password: this.loginForm.value.password\n    }\n    \n    this.authService.authenticateUser(user).subscribe((data: any) => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.msg = 'Success';\n        this.msgClass = 'bg-success';\n        this.showMsg = true;\n        setTimeout(() => this.router.navigate(['/']), 200);\n      } else {\n        this.msg = data.msg;\n        this.msgClass = 'bg-danger';\n        this.showMsg = true;\n      }\n    })\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <span class=\\\"navbar-brand text-light\\\">Auth App</span>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsDefault\\\" aria-controls=\\\"navbarsDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink='' routerLinkActive='active' [routerLinkActiveOptions]=\\\"{exact: true}\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink='dashboard' routerLinkActive='active'>Dashboard</a>\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-outline-info my-2 my-sm-0 mx-1\\\" routerLink='profile' *ngIf=\\\"authService.loggedIn()\\\">Profile</button>\\n    <button class=\\\"btn btn-outline-danger my-2 my-sm-0 mx-1\\\" type=\\\"submit\\\" (click)=\\\"onLogout()\\\" *ngIf=\\\"authService.loggedIn()\\\">Log out</button>\\n    \\n    <button class=\\\"btn btn-outline-warning my-2 my-sm-0 mx-1\\\" routerLink='login' *ngIf=\\\"!authService.loggedIn()\\\">Log in</button>\\n    <button class=\\\"btn btn-outline-success my-2 my-sm-0 mx-1\\\" routerLink='register' *ngIf=\\\"!authService.loggedIn()\\\">Register</button>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"my-3\\\">\\n  <h3>  {{ user.name }} </h3>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"> <b>username:</b> {{ user.username }} </li>\\n    <li class=\\\"list-group-item\\\"> <b>email:</b> {{ user.email }} </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((user: any) => {\n      this.user = user;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"my-3\\\">Register</h3>\\n<div class=\\\"card my-3\\\" *ngIf=\\\"showMsg\\\" [ngClass]=\\\"msgClass\\\">\\n  <div class=\\\"card-body text-light\\\"> {{ msg }} </div>\\n</div>\\n<form (ngSubmit)=\\\"onRegister()\\\" #f=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel required #name=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !name.valid && name.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please enter your name.\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" ngModel required #username=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !username.valid && username.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please choose a username.\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" ngModel required email #email=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !email.valid && email.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please enter your email.\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': !password.valid && password.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      Please choose a password.\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Confirm Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passwordConfirm\\\" ngModel required #passwordConfirm=\\\"ngModel\\\"\\n    [ngClass]=\\\"{'is-invalid': passwordConfirm.value != password.value && passwordConfirm.touched}\\\">\\n    <div class=\\\"invalid-feedback\\\">\\n      The passwords don't match.\\n    </div>\\n  </div>\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid || passwordConfirm.value != password.value\\\">\\n</form>\\n<br>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @ViewChild('f') registerForm: NgForm;\n  showMsg: Boolean = false;\n  msgClass: string = 'bg-warning';\n  msg: string;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    \n    // FUCK YOU\n    setTimeout(() => {\n      this.showMsg = true;\n      this.msgClass = 'bg-danger';\n      this.msg = 'FUCK YOU';\n      setTimeout(() => this.showMsg = false, 1000)\n    }, 3000);\n  }\n\n  onRegister() {\n    // event.preventDefault();\n\n    const user = {\n      name: this.registerForm.value.name,\n      username: this.registerForm.value.username,\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password\n    }\n\n    console.log(user);\n    this.authService.registerUser(user).subscribe((result: { success: boolean, msg: string }) => {\n      if (result.success) {\n        this.msg = 'Success';\n        this.msgClass = 'bg-success';\n        this.showMsg = true;\n        setTimeout(() => this.router.navigate(['/login']), 1000);\n      } else {\n        this.msg = result.msg;\n        this.msgClass = 'bg-danger';\n        this.showMsg = true;\n      }\n    });\n    \n\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    token: any;\r\n    user: any;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    registerUser(user) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json',\r\n            })\r\n          };\r\n        return this.http.post('http://localhost:3000/users/register', user, httpOptions);\r\n    }\r\n\r\n    authenticateUser(user) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json',\r\n            })\r\n          };\r\n        return this.http.post('http://localhost:3000/users/authenticate', user, httpOptions);\r\n    }\r\n\r\n    storeUserData(token, user) {\r\n        localStorage.setItem('id_token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        this.token = token;\r\n        this.user = user;\r\n    }\r\n\r\n    getProfile() {\r\n        this.loadToken();\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json',\r\n              'Authorization': this.token\r\n            })\r\n          };\r\n        return this.http.get('http://localhost:3000/users/profile', httpOptions);\r\n    }\r\n\r\n    loadToken() {\r\n        this.token = localStorage.getItem('id_token');\r\n    }\r\n\r\n    loggedIn() {\r\n        this.loadToken();\r\n\r\n        if (!this.token) return false;\r\n        \r\n        if (this.parseJwt(this.token).exp < Date.now() / 1000) return false;\r\n        else return true;\r\n    }\r\n\r\n    parseJwt (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n        return JSON.parse(window.atob(base64));\r\n    };\r\n\r\n    logout() {\r\n        this.token = null;\r\n        this.user = null;\r\n        localStorage.clear();\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}